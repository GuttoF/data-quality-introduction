{"config":{"lang":["pt"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introdu\u00e7\u00e3o ao Data Quality","text":""},{"location":"#fluxo","title":"Fluxo","text":"<pre><code>graph TD\n    A[Configurar Vari\u00e1veis] --&gt; B[Ler o Banco SQL];\n    B --&gt; V[Valida\u00e7\u00e3o do Schema de Entrada];\n    B --&gt; |Falha| X[Alerta de Erro];\n    V --&gt; |Falha| X[Alerta de Erro];\n    V --&gt; |Sucesso| C[Transformar os KPIs];\n    C --&gt; Y[Valida\u00e7\u00e3o do Schema de Sa\u00edda];\n    Y --&gt; |Falha| Z[Alerta de Erro];\n    Y --&gt; |Sucesso| D[Salvar no DuckDB];\n</code></pre>"},{"location":"#contrato-de-dados","title":"Contrato de dados","text":"<p>               Bases: <code>DataFrameModel</code></p> <p>Um modelo de esquema para validar um DataFrame contendo informa\u00e7\u00f5es de produtos usando pandera.</p>"},{"location":"#app.schema.ProdutoSchema--atributos","title":"Atributos:","text":"<p>id_produto : Series[int]     Um campo inteiro que representa o ID do produto. Este campo n\u00e3o \u00e9 anul\u00e1vel e seus valores s\u00e3o convertidos para inteiros.</p> Series[str] <p>Um campo de string que representa o nome do produto. Este campo n\u00e3o \u00e9 anul\u00e1vel e seus valores s\u00e3o convertidos para strings.</p> Series[float] <p>Um campo float que representa a quantidade do produto. Este campo tem uma restri\u00e7\u00e3o de intervalo com valores entre -150.0 e 500.0 (inclusive). Ele n\u00e3o \u00e9 anul\u00e1vel e seus valores s\u00e3o convertidos para floats.</p> Series[float] <p>Um campo float que representa o pre\u00e7o do produto. Este campo tem uma restri\u00e7\u00e3o de intervalo com valores entre 2.0 e 2000.0 (inclusive). Ele n\u00e3o \u00e9 anul\u00e1vel e seus valores s\u00e3o convertidos para floats.</p> Series[str] <p>Um campo de string que representa a categoria do produto. Este campo n\u00e3o \u00e9 anul\u00e1vel e seus valores s\u00e3o convertidos para strings.</p>"},{"location":"#app.schema.ProdutoSchema--config","title":"Config:","text":"<p>coerce : bool     Uma configura\u00e7\u00e3o para garantir que os tipos de dados sejam convertidos conforme especificado.</p> bool <p>Uma configura\u00e7\u00e3o para garantir a valida\u00e7\u00e3o estrita do esquema.</p> Source code in <code>app/schema.py</code> <pre><code>class ProdutoSchema(pa.DataFrameModel):\n    \"\"\"\n    Um modelo de esquema para validar um DataFrame contendo informa\u00e7\u00f5es de produtos usando pandera.\n\n    Atributos:\n    ----------\n    id_produto : Series[int]\n        Um campo inteiro que representa o ID do produto. Este campo n\u00e3o \u00e9 anul\u00e1vel e seus valores s\u00e3o convertidos para inteiros.\n\n    nome : Series[str]\n        Um campo de string que representa o nome do produto. Este campo n\u00e3o \u00e9 anul\u00e1vel e seus valores s\u00e3o convertidos para strings.\n\n    quantidade : Series[float]\n        Um campo float que representa a quantidade do produto. Este campo tem uma restri\u00e7\u00e3o de intervalo com valores entre\n        -150.0 e 500.0 (inclusive). Ele n\u00e3o \u00e9 anul\u00e1vel e seus valores s\u00e3o convertidos para floats.\n\n    preco : Series[float]\n        Um campo float que representa o pre\u00e7o do produto. Este campo tem uma restri\u00e7\u00e3o de intervalo com valores entre\n        2.0 e 2000.0 (inclusive). Ele n\u00e3o \u00e9 anul\u00e1vel e seus valores s\u00e3o convertidos para floats.\n\n    categoria : Series[str]\n        Um campo de string que representa a categoria do produto. Este campo n\u00e3o \u00e9 anul\u00e1vel e seus valores s\u00e3o convertidos para strings.\n\n    Config:\n    -------\n    coerce : bool\n        Uma configura\u00e7\u00e3o para garantir que os tipos de dados sejam convertidos conforme especificado.\n\n    strict : bool\n        Uma configura\u00e7\u00e3o para garantir a valida\u00e7\u00e3o estrita do esquema.\n    \"\"\"\n\n    id_produto: Series[int] = pa.Field(nullable=False, coerce=True)\n    nome: Series[str] = pa.Field(nullable=False, coerce=True)\n    quantidade: Series[float] = pa.Field(\n        ge=-150.0, le=500.0, nullable=False, coerce=True\n    )\n    preco: Series[float] = pa.Field(ge=2.0, le=2000.0, nullable=False, coerce=True)\n    categoria: Series[str] = pa.Field(nullable=False, coerce=True)\n\n    class Config:\n        coerce = True\n        strict = True\n</code></pre>"}]}